Figure 4-6 shows some complex ﬁgures that will help you get
the experiment started. The black portions of the ﬁgure indicate D
inputs that are to be connected to logic 0 (COMM). The white cells
represent D inputs that aren’t connected to any sort of input at all.

As usual, it is a good idea to keep notes concerning the input
speciﬁcations for the ﬁgures you create.

After playing with this circuit for a while, try making the ﬁgures
smaller. To cut the size of the matrix in half, shift the 8 inputs to the
multiplexer to lower-order H- and V—count sources: SO=16H,
Sl=32H, SZ=16V, 53:32V. You will have to reduce the size of the
window, too, otherwise you will end up building four identical ﬁgures
inside that original window space. The window can be reduced by
adding inverted or noninverted versions of 64H and 64V to the
window inputs of 1C3.

The basic matrix described thus far is made up of 16 cells
arranged in a 4x4 pattern. It is possible to alter the conﬁguration to
generate 16-ce11 matrices that are either 2 x8 or 8 x2. (The ﬁrst digit
indicating the number of horizontal cells and the second indicating
the number of vertical cells.)

Figure 4-7 shows the speciﬁcations for generating these two
different kinds of 16-cell matrices. The 2 x8 matrix is generated by
connecting SO to 32H, 51 to 32V, 52 to 64V, and 83 to 128V. The
circuit in this case uses only one H-count select input and three
V-count inputs, hence it is longer than it is wide.

Changing the width-to-height raﬁo also alters the shape of the
required window. Note the changes as speciﬁed in the window data
in Fig. 4—7a.

If you ever want to create a complex pattern within an 8x2
matrix as in Fig. 4-7b, simply reorganize the select and window
inputs as prescribed in that ﬁgure.

In either case you can still eliminate white cells by connecting
the designated D input to logic 0, and retain a white cell by making no
connection at all to that particular D input.

Carefully compare the shapes, select, and window speciﬁca-
tions for the matrix-generating circuits in Figs. 4-4a and 4-7. All 3
have a total of 16 cells. That’s quite apparent. But note a more subtle
feature. The matrices must have a width-by-height product equal to
16. For example, it is not possible to build a 3x5 matrix using this
16-ce11 scheme. You do not have to use all the cells (the ﬁgure in Fig.
4-4b happens to occupy a 2x3 space), but you must be able to
account for all of them in the basic matrix pattern.

Work with this basic 16-cell format, changing select and window
speciﬁcations, until you are certain you understand how it works. As

88

 

