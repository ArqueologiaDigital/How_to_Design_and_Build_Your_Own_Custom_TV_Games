appears at M. If, on the other hand, the select inputs are set to
binary 0001 (S3=0, 82:0, 81:0, 80:1), output M is equal to an
inverted version of the D1 input.

The S columns in Fig. 4-2 actually represent a 4-bit binary
counting sequence from binary 0000 (decimal 0) through binary 1111
(decimal 15). The D inputs are labeled with numbers running from 0
through 15, and it is no coindicence that setting a particular binary
number at th_e_ S inputs causes the corresponding D input to appear
inverted at M.

A 16:1 multiplexer thus directs one of 16 different inputs to a
single output, depending on the 4-bit number applied to the 8 inputs.
If the select inputs happen to be connected to a 4—bit binary counter,
the D outputs would appear at M in sequence—4n a scanning—like
fashion. And that, dear reader, is a clue to how a multiplexer can be
used for generating complex ﬁgures on the TV screen.

Just to get the Complex-Figure Tinkerbox going, connect the
circuit shown in Fig. 4-3. Note that select inputs SO, 81, 82, and 83
are connected to horizontal-count signals 32H, 64H, 128H, and
256B respectively. These counting signals cause the multiplexer to
deliver inverted versigis of the D inputs, in sequence from D0
through D15, to the Moutput. Also note that the CE input is
connected to COMM in order to permanently enable the multiplex-
ing action. Connect the M output directly to GAME VID IN as shown
in Fig. 4-3.

At this point in the experiment, the screen is blank, or should be
blank if everything is going well. Then connect the D8 input, pin 23,
to COMM. A white bar should appear down the middle of the screen.
Its width should correspond to the width of the bars for a 32H signal.

Now remove the COMM jumper from D8 and connect it to
other D-input terminals on the multiplexer, inputs D7 (pin 1), D9 (pin
22), and D10 (pin 21). What happens to the bar? It appears at a
different place on the screen each time the COMM jumper is moved
to a different D-input location. You will notice that the bar does not
appear when connecting inputs D8, D7, and D6 to COMM. The bar
is being generated by the multiplexer in those three instance, but it
so happens the bar is in the horizontal blanking interval. All other
inputs ﬁx the location of this vertical white bar in some visible area of
the screen. 1

Using the multiplexer as shown in Fig. 4-3 divides the screen
horizontally into 16 equal segments. Each of these segments repre-
sents one of the inputs to the multiplexer IC. The D0 input is active
during the segment where 256H, 128B, 64H, and 32H are all equal

82

 

